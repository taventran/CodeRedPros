Index: backend/getData.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import pandas as pd\r\nimport numpy as np\r\nimport requests\r\n\r\n\r\ndef getWeights(use, budget):\r\n    weights = ()\r\n\r\n    cpu = 0\r\n    cpu_cooler = 0\r\n    gpu = 0\r\n    ram = 0\r\n    storage = 0\r\n    mobo = 0\r\n    case = 0\r\n    psu = 0\r\n\r\n\r\n    if use == \"1\":\r\n        cpu = 0.2\r\n        cpu_cooler = 0.1\r\n        gpu = 0.2\r\n        ram = 0.1\r\n        storage = 0.1\r\n        mobo = 0.1\r\n        case = 0.1\r\n        psu = 0.1\r\n    elif use == \"2\":\r\n        cpu = 0.2\r\n        cpu_cooler = 0.05\r\n        gpu = 0.2\r\n        ram = 0.1\r\n        storage = 0.2\r\n        mobo = 0.1\r\n        case = 0.1\r\n        psu = 0.05\r\n    elif use == \"3\":\r\n        cpu = 0.2\r\n        cpu_cooler = 0.05\r\n        gpu = 0.2\r\n        ram = 0.1\r\n        storage = 0.2\r\n        mobo = 0.1\r\n        case = 0.1\r\n        psu = 0.05\r\n    elif use == \"4\":\r\n        cpu = 0.25\r\n        cpu_cooler = 0.05\r\n        gpu = 0.25\r\n        ram = 0.2\r\n        storage = 0.1\r\n        mobo = 0.05\r\n        case = 0.05\r\n        psu = 0.05\r\n    elif use == \"5\":\r\n        cpu = 0.2\r\n        cpu_cooler = 0.1\r\n        gpu = 0.25\r\n        ram = 0.2\r\n        storage = 0.1\r\n        mobo = 0.05\r\n        case = 0.05\r\n        psu = 0.05\r\n\r\n    weights = (cpu, cpu_cooler, gpu, ram, storage, mobo, case, psu) * budget\r\n    return weights\r\n\r\ndef getCPU(budgetMax, budgetMin):\r\n    api_url = \"http://127.0.0.1:8000/api/CPU/\"\r\n    response = requests.get(api_url)\r\n    df = pd.DataFrame(response.json())\r\n    df = df.loc[(df['price'] <= budgetMax) & (df['price'] >= budgetMin)]\r\n    df = df.sort_values([\"coreCount\", \"clockSpeed\"], ascending = False)\r\n    return df[:10]\r\n\r\ndef getCPUCooler(budgetMax, budgetMin):\r\n    api_url = \"http://127.0.0.1:8000/api/CPUCooler/\"\r\n    response = requests.get(api_url)\r\n    df = pd.DataFrame(response.json())\r\n    df = df.loc[(df['price'] <= budgetMax) & (df['price'] >= budgetMin)]\r\n    return df[:10]\r\n\r\ndef getGPU(budgetMax, budgetMin):\r\n    api_url = \"http://127.0.0.1:8000/api/GPU/\"\r\n    response = requests.get(api_url)\r\n    df = pd.DataFrame(response.json())\r\n    df = df.loc[(df['price'] <= budgetMax) & (df['price'] >= budgetMin)]\r\n    df = df.sort_values([\"memory\", \"coreClock\"], ascending = False)\r\n    return df[:10]\r\n\r\ndef getRAM(budgetMax, budgetMin):\r\n    api_url = \"http://127.0.0.1:8000/api/memory/\"\r\n    response = requests.get(api_url)\r\n    df = pd.DataFrame(response.json())\r\n    df = df.loc[(df['price'] <= budgetMax) & (df['price'] >= budgetMin)]\r\n    df = df.sort_values([\"memory\", \"gigs\"], ascending = False)\r\n    return df[:10]\r\n\r\ndef getStorage(budgetMax, budgetMin):\r\n    api_url = \"http://127.0.0.1:8000/api/storage/\"\r\n    response = requests.get(api_url)\r\n    df = pd.DataFrame(response.json())\r\n    df = df.loc[(df['price'] <= budgetMax) & (df['price'] >= budgetMin)]\r\n    df = df.sort_values([\"capacity\"], ascending = False)\r\n    return df[:10]\r\n\r\ndef getMobo(budgetMax, budgetMin, size):\r\n    api_url = \"http://127.0.0.1:8000/api/motherboard/\"\r\n    response = requests.get(api_url)\r\n    df = pd.DataFrame(response.json())\r\n    df = df.loc[(df['price'] <= budgetMax) & (df['price'] >= budgetMin)]\r\n    df = df.loc[(df['size'] == size)]\r\n    return df[:10]\r\n\r\ndef getCase(budgetMax, budgetMin, size, aesthetic):\r\n    api_url = \"http://127.0.0.1:8000/api/case/\"\r\n    response = requests.get(api_url)\r\n    df = pd.DataFrame(response.json())\r\n    df = df.loc[(df['price'] <= budgetMax) & (df['price'] >= budgetMin)]\r\n    df = df.loc[(df['size'] == size)]\r\n    return df[:10]\r\n\r\ndef getPSU(budgetMax, budgetMin):\r\n    api_url = \"http://127.0.0.1:8000/api/powersupply/\"\r\n    response = requests.get(api_url)\r\n    df = pd.DataFrame(response.json())\r\n    df = df.loc[(df['price'] <= budgetMax) & (df['price'] >= budgetMin)]\r\n    return df[:10]\r\n\r\n\r\n\r\n\r\n\r\n\r\nprint(getGPU(400, 100))
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/backend/getData.py b/backend/getData.py
--- a/backend/getData.py	(revision e073bf611060a92d88c78902f66a082741a03d62)
+++ b/backend/getData.py	(date 1667137750528)
@@ -132,4 +132,3 @@
 
 
 
-print(getGPU(400, 100))
\ No newline at end of file
