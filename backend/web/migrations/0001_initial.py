# Generated by Django 4.1.2 on 2022-10-30 14:31

from django.db import migrations, models
import django.db.models.deletion
import web.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AllData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('num', models.IntegerField(default=1)),
            ],
        ),
        migrations.CreateModel(
            name='OutputComputer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_price', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='UserData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('use', models.IntegerField(default=1)),
                ('aesthetic', models.BooleanField(default=False)),
                ('priceRange', models.FloatField(default=10)),
                ('size', models.IntegerField(default=1)),
                ('image_url', models.ImageField(blank=True, default='images/8815115082.png', null=True, upload_to=web.models.upload_to)),
            ],
        ),
        migrations.CreateModel(
            name='Storage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ssd', models.BooleanField(default=False)),
                ('price', models.FloatField()),
                ('capacity', models.FloatField(default=0)),
                ('name', models.TextField(blank=True, max_length=50)),
                ('allData', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, related_name='storage', to='web.alldata')),
            ],
        ),
        migrations.CreateModel(
            name='PowerSupply',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.FloatField()),
                ('name', models.TextField(blank=True, max_length=50)),
                ('watts', models.IntegerField(default=0)),
                ('effiency', models.CharField(default='', max_length=50)),
                ('allData', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, related_name='powerSupply', to='web.alldata')),
            ],
        ),
        migrations.CreateModel(
            name='Motherboard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.FloatField(default=10)),
                ('name', models.CharField(default='', max_length=50)),
                ('size', models.CharField(default='', max_length=50)),
                ('allData', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, related_name='motherboard', to='web.alldata')),
            ],
        ),
        migrations.CreateModel(
            name='Memory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.FloatField()),
                ('name', models.TextField(blank=True, max_length=50)),
                ('gigs', models.IntegerField(default=0)),
                ('allData', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, related_name='memory', to='web.alldata')),
            ],
        ),
        migrations.CreateModel(
            name='GPU',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.FloatField()),
                ('name', models.TextField(blank=True, max_length=50)),
                ('coreClock', models.IntegerField(blank=True, default=0)),
                ('memory', models.IntegerField(blank=True, default=0)),
                ('allData', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, related_name='GPU', to='web.alldata')),
            ],
        ),
        migrations.CreateModel(
            name='CPUCooler',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.FloatField()),
                ('name', models.TextField(blank=True, max_length=50)),
                ('allData', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, related_name='CPUCooler', to='web.alldata')),
            ],
        ),
        migrations.CreateModel(
            name='CPU',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.FloatField()),
                ('coreCount', models.FloatField(blank=True)),
                ('clockSpeed', models.FloatField(blank=True)),
                ('name', models.TextField(blank=True, max_length=50)),
                ('allData', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, related_name='CPU', to='web.alldata')),
            ],
        ),
        migrations.CreateModel(
            name='Case',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.FloatField(default=0)),
                ('size', models.CharField(default='unknown', max_length=60)),
                ('name', models.TextField(max_length=50)),
                ('color', models.CharField(default='unknown', max_length=30)),
                ('allData', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, related_name='case', to='web.alldata')),
            ],
        ),
    ]
